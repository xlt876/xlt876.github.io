<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>physics and programming</title>
  
  <subtitle>design yourself</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-03-12T13:21:07.443Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>KeQin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git_command</title>
    <link href="http://yoursite.com/2021/03/12/SUMMARY/"/>
    <id>http://yoursite.com/2021/03/12/SUMMARY/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="git%E5%91%BD%E4%BB%A4.md">git命令</a></li><li><a href="shell%E5%91%BD%E4%BB%A4.md">shell命令</a></li><li><a href="debug%E8%AE%B0%E5%BD%95.md">debug记录</a></li><li><a href="%E9%97%AE%E9%A2%98.md">问题</a><ul><li><a href="%E6%97%A0%E6%A0%87%E9%A2%98.md">无标题</a></li></ul></li><li><a href="gdb%E8%AE%B0%E5%BD%95.md">gdb记录</a></li><li><a href="scalapack.md">scalapack</a></li><li><a href="%E4%B8%8D%E5%8A%A0%E6%95%B4%E7%90%86%E7%9A%84%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7.md">不加整理的奇技淫巧</a></li><li><a href="python.md">python</a></li><li><a href="%E5%9B%A2%E7%B0%87.md">团簇</a></li><li><a href="./MPI_command.md">MPI_command</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;git%E5%91%BD%E4%BB%A4.md&quot;&gt;git命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;shell%E5%91%BD%E4%BB%A4.md&quot;&gt;shell命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;debug%E8%A</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>debug log</title>
    <link href="http://yoursite.com/2021/03/12/debug%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2021/03/12/debug%E8%AE%B0%E5%BD%95/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组维度边界未正确设置，查看边界："><a href="#数组维度边界未正确设置，查看边界：" class="headerlink" title="数组维度边界未正确设置，查看边界："></a>数组维度边界未正确设置，查看边界：</h2><pre><code>print*,lbound(array,dim=2),ubound(array,dim=2)</code></pre><h2 id="if判断考虑不周，增加了代码的混乱"><a href="#if判断考虑不周，增加了代码的混乱" class="headerlink" title="if判断考虑不周，增加了代码的混乱"></a>if判断考虑不周，增加了代码的混乱</h2><ul><li>然而我没有办法<h2 id="调用子程序segmentation-fault-，子程序初始化变量内存出错，local的变量"><a href="#调用子程序segmentation-fault-，子程序初始化变量内存出错，local的变量" class="headerlink" title="调用子程序segmentation fault ，子程序初始化变量内存出错，local的变量"></a>调用子程序segmentation fault ，子程序初始化变量内存出错，local的变量</h2><pre><code>ulimit -s unlimited</code></pre></li><li>出乎意料的bug，方向错了，不是回退版本也发现不了<h2 id="有时候能算对，有时候算不对，输出出来没问题，在程序里莫名值就变了"><a href="#有时候能算对，有时候算不对，输出出来没问题，在程序里莫名值就变了" class="headerlink" title="有时候能算对，有时候算不对，输出出来没问题，在程序里莫名值就变了"></a>有时候能算对，有时候算不对，输出出来没问题，在程序里莫名值就变了</h2>通讯的时候isend没有wait，可能没有send完就开始赋值，导致数组值不对，所以一加mpi_barrier就能算对<h2 id="nonlocal-force-算的不对"><a href="#nonlocal-force-算的不对" class="headerlink" title="nonlocal force 算的不对"></a>nonlocal force 算的不对</h2>少通讯了一个变量，计算结果不对正常<h2 id="添加自动设置孤立体系半径，lat-mat没改引起bug"><a href="#添加自动设置孤立体系半径，lat-mat没改引起bug" class="headerlink" title="添加自动设置孤立体系半径，lat_mat没改引起bug"></a>添加自动设置孤立体系半径，lat_mat没改引起bug</h2>这是编写思路的问题，应该按独立模块来写，或者要确保所有相关变量的更改<h2 id="并行用直角坐标报错"><a href="#并行用直角坐标报错" class="headerlink" title="并行用直角坐标报错"></a>并行用直角坐标报错</h2>加了参数没有通讯，新加参数一定及时通讯<h2 id="数组赋值报错堆栈错误，有traceback，无其他信息"><a href="#数组赋值报错堆栈错误，有traceback，无其他信息" class="headerlink" title="数组赋值报错堆栈错误，有traceback，无其他信息"></a>数组赋值报错堆栈错误，有traceback，无其他信息</h2>给定数组维度对数组赋值，传入数组维度不对</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数组维度边界未正确设置，查看边界：&quot;&gt;&lt;a href=&quot;#数组维度边界未正确设置，查看边界：&quot; class=&quot;headerlink&quot; title=&quot;数组维度边界未正确设置，查看边界：&quot;&gt;&lt;/a&gt;数组维度边界未正确设置，查看边界：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;pr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>gdb command</title>
    <link href="http://yoursite.com/2021/03/12/gdb%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2021/03/12/gdb%E8%AE%B0%E5%BD%95/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash">gdb ./omprsdft.x</code></pre><h3 id="显示源码"><a href="#显示源码" class="headerlink" title="显示源码"></a>显示源码</h3><pre class=" language-bash"><code class="language-bash">llist</code></pre><h3 id="断点"><a href="#断点" class="headerlink" title="断点"></a>断点</h3><ul><li><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><pre class=" language-bash"><code class="language-bash">b <span class="token string">"a function name, a line number,or an address of an instruction"</span><span class="token keyword">break</span> </code></pre></li><li><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><pre class=" language-bash"><code class="language-bash">info <span class="token keyword">break</span> <span class="token punctuation">[</span>n<span class="token punctuation">]</span></code></pre></li><li><h4 id="维护"><a href="#维护" class="headerlink" title="维护"></a>维护</h4><pre class=" language-bash"><code class="language-bash">delete、clear、disable、enable </code></pre></li></ul><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><pre class=" language-bash"><code class="language-bash">rrun</code></pre><h3 id="并行调试"><a href="#并行调试" class="headerlink" title="并行调试"></a>并行调试</h3><pre class=" language-bash"><code class="language-bash">mpirun -n 4  xfce4-terminal --default-working-directory<span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">pwd</span><span class="token variable">`</span></span> -e <span class="token string">"gdb ./aa"</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h3&gt;&lt;pre class=&quot; language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gdb ./omprsdft.x
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>git command</title>
    <link href="http://yoursite.com/2021/03/12/git%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2021/03/12/git%E5%91%BD%E4%BB%A4/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="追加提交"><a href="#追加提交" class="headerlink" title="追加提交"></a>追加提交</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit --amend</code></pre><h2 id="撤销提交"><a href="#撤销提交" class="headerlink" title="撤销提交"></a>撤销提交</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> reset HEAD</code></pre><h2 id="暂存"><a href="#暂存" class="headerlink" title="暂存"></a>暂存</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> stash</code></pre><h2 id="创建并切换分支"><a href="#创建并切换分支" class="headerlink" title="创建并切换分支"></a>创建并切换分支</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> checkout -b branch_name </code></pre><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> checkout branch_name</code></pre><h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> branch</code></pre><h2 id="将A分支的某次提交‘合并-提交-’到分支B"><a href="#将A分支的某次提交‘合并-提交-’到分支B" class="headerlink" title="将A分支的某次提交‘合并(提交)’到分支B"></a>将A分支的某次提交‘合并(提交)’到分支B</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> checkout B<span class="token function">git</span> log  <span class="token comment" spellcheck="true">#get the commitID</span><span class="token function">git</span> checkout A<span class="token function">git</span> cherry-pick xxxxxx <span class="token comment" spellcheck="true"># xxxxxx refer the commitID</span></code></pre><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> branch -d xxxx</code></pre><h1 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h1><h2 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> remote -v</code></pre><h2 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> remote add origin url/to/your/fork</code></pre><h2 id="本地仓库同步"><a href="#本地仓库同步" class="headerlink" title="本地仓库同步"></a>本地仓库同步</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> pull ssh://xlt@59.72.114.217:6888/home/xlt/mount/Xlt_Work/Isolate_RS/ares_parallel/src_p<span class="token function">git</span> pull --rebase <span class="token comment" spellcheck="true">#追加提交远程库有更新需要merge时,不自动新增本地提交</span><span class="token function">git</span> push --force-with-lease 509git <span class="token comment" spellcheck="true">#追加提交后push到远程仓库</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;追加提交&quot;&gt;&lt;a href=&quot;#追加提交&quot; class=&quot;headerlink&quot; title=&quot;追加提交&quot;&gt;&lt;/a&gt;追加提交&lt;/h2&gt;&lt;pre class=&quot; language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2021/03/12/hello-world/"/>
    <id>http://yoursite.com/2021/03/12/hello-world/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python log</title>
    <link href="http://yoursite.com/2021/03/12/python/"/>
    <id>http://yoursite.com/2021/03/12/python/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在python中输入参数有两种，元组和字典"><a href="#在python中输入参数有两种，元组和字典" class="headerlink" title="在python中输入参数有两种，元组和字典"></a>在python中输入参数有两种，元组和字典</h2><h2 id="文档-xxx-doc-与help-显示对应"><a href="#文档-xxx-doc-与help-显示对应" class="headerlink" title="文档 xxx.__doc__ 与help() 显示对应"></a>文档 xxx.__doc__ 与help() 显示对应</h2><p>在模块开头，函数定义下方添加</p><h2 id="多态-继承-封装"><a href="#多态-继承-封装" class="headerlink" title="多态 继承 封装"></a>多态 继承 封装</h2><ul><li>多态<br>相同的方法可以有不同的结果</li><li>继承<pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">aa</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span></code></pre>类aa继承list的属性和方法，同名的子类覆盖父类</li><li>封装<br>只用关注对象的方法和属性而不用关注其如何实现<h2 id="类-class"><a href="#类-class" class="headerlink" title="类(class)"></a>类(class)</h2>命名开头大写，属性用名词，方法用动词</li><li>self<br>self  相当于c++的this指针，实例化对象时指明对象本身，用于设置及处理对象独有的性质<br>方法第一个参数设为self，不然实例化后无法调用，即 绑定<br>self不用做为参数专门传入，调用时自动传入</li><li>magic method(魔法方法)<br>被双下划线包围<ul><li>__init__(self) 构造方法 </li><li>__dict__ 显示实例对象的属性，不显示类属型和特殊属性</li></ul></li><li>__name 私有变量、私有函数<br>伪私有，通过**_类名__私有变量(函数)**可调用</li><li>类 类对象 实例对象，不操作就仅是指针<br>同名的属性会覆盖方法</li><li>组合<br>在类中实例化类，</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;在python中输入参数有两种，元组和字典&quot;&gt;&lt;a href=&quot;#在python中输入参数有两种，元组和字典&quot; class=&quot;headerlink&quot; title=&quot;在python中输入参数有两种，元组和字典&quot;&gt;&lt;/a&gt;在python中输入参数有两种，元组和字典&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>question</title>
    <link href="http://yoursite.com/2021/03/12/question/"/>
    <id>http://yoursite.com/2021/03/12/question/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h3 id="the-world-will-never-be-ready-but-it-will-happen-anyway"><a href="#the-world-will-never-be-ready-but-it-will-happen-anyway" class="headerlink" title="the world will never be ready but it will happen anyway"></a>the world will never be ready but it will happen anyway</h3><h2 id="变量该如何命名"><a href="#变量该如何命名" class="headerlink" title="变量该如何命名"></a>变量该如何命名</h2><ul><li><input checked="" disabled="" type="checkbox"> how this</li><li><input disabled="" type="checkbox"> no no no<br>测试模块要分开写，不然不容易往程序里添加，但测试又很麻烦<br>测试代码和写模块本身就不一样<br>模块的公有变量该不该用，不利于代码的移植啊，麻烦</li></ul><h2 id="预编译"><a href="#预编译" class="headerlink" title="预编译"></a>预编译</h2><ul><li><h3 id="行控制"><a href="#行控制" class="headerlink" title="行控制"></a>行控制</h3><p>  #line __LINE__ __FILE__</p></li><li><h3 id="include-‘xxx-h’-优先级如何"><a href="#include-‘xxx-h’-优先级如何" class="headerlink" title="#include ‘xxx.h’ 优先级如何"></a>#include ‘xxx.h’ 优先级如何</h3><ul><li>直接替换文件内容，按预编译语法判断</li></ul></li></ul><pre><code>#include &lt;header&gt;#include &quot;file&quot;</code></pre><h2 id="org-mode的使用"><a href="#org-mode的使用" class="headerlink" title="org-mode的使用"></a>org-mode的使用</h2><ul><li>C-c . 插入时间</li><li>层级目录 ‘*’+’space’</li><li>TAB键 收放目录</li><li>删除线 ‘-ddd-’</li></ul><h2 id="3核的收敛步数变长又是哪的问题呢，什么导致了误差？"><a href="#3核的收敛步数变长又是哪的问题呢，什么导致了误差？" class="headerlink" title="3核的收敛步数变长又是哪的问题呢，什么导致了误差？"></a>3核的收敛步数变长又是哪的问题呢，什么导致了误差？</h2><p>通讯的问题 ，debug记录第四条</p><h2 id="不同核数自洽的计算步数不同"><a href="#不同核数自洽的计算步数不同" class="headerlink" title="不同核数自洽的计算步数不同"></a>不同核数自洽的计算步数不同</h2><p>scalapack的block_mbnb设置不对</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;the-world-will-never-be-ready-but-it-will-happen-anyway&quot;&gt;&lt;a href=&quot;#the-world-will-never-be-ready-but-it-will-happen-anyway&quot; class=&quot;h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>scalapack log</title>
    <link href="http://yoursite.com/2021/03/12/scalapack/"/>
    <id>http://yoursite.com/2021/03/12/scalapack/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="scalapack库使用注意事项"><a href="#scalapack库使用注意事项" class="headerlink" title="scalapack库使用注意事项"></a>scalapack库使用注意事项</h2><p>老老实实看说明，测试例子是最快的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;scalapack库使用注意事项&quot;&gt;&lt;a href=&quot;#scalapack库使用注意事项&quot; class=&quot;headerlink&quot; title=&quot;scalapack库使用注意事项&quot;&gt;&lt;/a&gt;scalapack库使用注意事项&lt;/h2&gt;&lt;p&gt;老老实实看说明，测试例子是最</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>shell command</title>
    <link href="http://yoursite.com/2021/03/12/shell%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2021/03/12/shell%E5%91%BD%E4%BB%A4/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="phonopy-扩胞"><a href="#phonopy-扩胞" class="headerlink" title="phonopy 扩胞"></a>phonopy 扩胞</h2><pre class=" language-bash"><code class="language-bash">phonopy -d --dim<span class="token operator">=</span><span class="token string">'10 10 10'</span></code></pre><p>-d displacement 不明白这个参数为什么必要</p><h2 id="python-查看帮助"><a href="#python-查看帮助" class="headerlink" title="python 查看帮助"></a>python 查看帮助</h2><ul><li>pydoc</li><li>intercative help utility</li></ul><h2 id="apt-get-update-info-prompt-some-error"><a href="#apt-get-update-info-prompt-some-error" class="headerlink" title="apt-get update info prompt some error"></a>apt-get update info prompt some error</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> /etc/apt/<span class="token function">vi</span> source.list   <span class="token comment" spellcheck="true"># if find no error, try grep the info in all files belong to the apt/</span></code></pre><h2 id="system-clipboard"><a href="#system-clipboard" class="headerlink" title="system clipboard"></a>system clipboard</h2><pre class=" language-bash"><code class="language-bash">xxx <span class="token operator">|</span>xsel -b -s -p<span class="token punctuation">[</span>default<span class="token punctuation">]</span></code></pre><h2 id="awk使用举例"><a href="#awk使用举例" class="headerlink" title="awk使用举例"></a>awk使用举例</h2><pre class=" language-bash"><code class="language-bash"><span class="token keyword">for</span> a <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> -d <span class="token punctuation">[</span>1-8<span class="token punctuation">]</span>*<span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token keyword">echo</span> <span class="token variable">$a</span> <span class="token punctuation">;</span><span class="token function">cat</span> $<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;a&amp;#125;/1/cp2k.inp |awk '/ABC/&amp;#123;printf "%s\n%3.1f\n %15.10f%15.10f%15.10f\n%15.10f%15.10f%15.10f\n%15.10f%15.10f%15.10f\n%s\n%d\n%s\n","B20",1.0,$2,0,0,0,$3,0,0,0,$3,"B",20,"Dir"&amp;#125; /&amp;END COORD/&amp;#123;p=0&amp;#125; &amp;#123;if(p==1)&amp;#123;print $2,$3,$4&amp;#125;&amp;#125; /SCALED/&amp;#123;p=1&amp;#125;' > POSCAR_$&amp;#123;a&amp;#125;; done</span></code></pre><h2 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">du</span> -h --summarize ./* <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">"^0"</span><span class="token operator">|</span><span class="token function">cut</span> -f2<span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">ls</span></code></pre><p>删除当前目录下大小为0的文件</p><h2 id="替换castep文件名"><a href="#替换castep文件名" class="headerlink" title="替换castep文件名"></a>替换castep文件名</h2><pre class=" language-bash"><code class="language-bash"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> C.*<span class="token variable">)</span></span> <span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token function">mv</span> $<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;i&amp;#125; O.$&amp;#123;i##*.&amp;#125; ;done</span></code></pre><h2 id="C-开头的文件换成O开头"><a href="#C-开头的文件换成O开头" class="headerlink" title="C.开头的文件换成O开头"></a>C.开头的文件换成O开头</h2><pre class=" language-bash"><code class="language-bash"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> out*<span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token function">cp</span> $<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;i&amp;#125; ../pot/pot_Ti/Ti$&amp;#123;i##out&amp;#125; ;done</span></code></pre><h2 id="替换文件内部字符"><a href="#替换文件内部字符" class="headerlink" title="替换文件内部字符"></a>替换文件内部字符</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">sed</span> -i <span class="token string">'s/Au/C/g'</span> ARES.CONT_*</code></pre><h2 id="xarg的奇怪应用"><a href="#xarg的奇怪应用" class="headerlink" title="xarg的奇怪应用"></a>xarg的奇怪应用</h2><pre class=" language-bash"><code class="language-bash"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> parsecPOS <span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span> bohr2angs <span class="token variable">$i</span><span class="token punctuation">;</span><span class="token keyword">done</span> <span class="token operator">|</span><span class="token function">xargs</span> -n 3</code></pre><h2 id="并行环境的设置"><a href="#并行环境的设置" class="headerlink" title="并行环境的设置"></a>并行环境的设置</h2><pre class=" language-bash"><code class="language-bash"><span class="token keyword">echo</span> 0 <span class="token operator">|</span><span class="token function">sudo</span> <span class="token function">tee</span> /proc/sys/kernel/yama/ptrace_scope</code></pre><h2 id="查看静态库的内容"><a href="#查看静态库的内容" class="headerlink" title="查看静态库的内容"></a>查看静态库的内容</h2><pre class=" language-bash"><code class="language-bash">ar -t \*.a  <span class="token comment" spellcheck="true">#查看文件</span>nm \*.a     <span class="token comment" spellcheck="true">#查看函数,变量</span></code></pre><h2 id="批量修改模块名"><a href="#批量修改模块名" class="headerlink" title="批量修改模块名"></a>批量修改模块名</h2><pre class=" language-bash"><code class="language-bash"><span class="token keyword">while</span> <span class="token function">read</span> i <span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">sed</span> -i <span class="token string">"s/module *$&amp;#123;i&amp;#125;/&amp;_p/i"</span> ./*90 <span class="token punctuation">;</span> <span class="token function">sed</span> -i <span class="token string">"s/use *$&amp;#123;i&amp;#125;/&amp;_p/i"</span> ./*90 <span class="token punctuation">;</span>done<span class="token operator">&lt;</span> module_log</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;phonopy-扩胞&quot;&gt;&lt;a href=&quot;#phonopy-扩胞&quot; class=&quot;headerlink&quot; title=&quot;phonopy 扩胞&quot;&gt;&lt;/a&gt;phonopy 扩胞&lt;/h2&gt;&lt;pre class=&quot; language-bash&quot;&gt;&lt;code class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>something</title>
    <link href="http://yoursite.com/2021/03/12/something/"/>
    <id>http://yoursite.com/2021/03/12/something/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="任意形状网格的hartree势求解"><a href="#任意形状网格的hartree势求解" class="headerlink" title="任意形状网格的hartree势求解"></a>任意形状网格的hartree势求解</h2><p>isf方法究竟是如何实现的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;任意形状网格的hartree势求解&quot;&gt;&lt;a href=&quot;#任意形状网格的hartree势求解&quot; class=&quot;headerlink&quot; title=&quot;任意形状网格的hartree势求解&quot;&gt;&lt;/a&gt;任意形状网格的hartree势求解&lt;/h2&gt;&lt;p&gt;isf方法究竟是如何</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>tmux command log</title>
    <link href="http://yoursite.com/2021/03/12/tmux/"/>
    <id>http://yoursite.com/2021/03/12/tmux/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<p>pane move</p><pre class=" language-bash"><code class="language-bash">prefix nprefix pprefix l</code></pre><p>kill pane, window</p><pre class=" language-bash"><code class="language-bash">prefix x <span class="token comment" spellcheck="true">#kill pane</span>prefix <span class="token operator">&amp;</span> <span class="token comment" spellcheck="true">#kill windows</span><span class="token comment" spellcheck="true"># kill session use :kill-session -t</span></code></pre><p>rename</p><pre class=" language-bash"><code class="language-bash">prefix $ <span class="token comment" spellcheck="true">#reanme session</span>prefix , <span class="token comment" spellcheck="true">#rename window</span></code></pre><p>recorver session</p><pre class=" language-bash"><code class="language-bash">tmux attach </code></pre><p>leave session</p><pre class=" language-bash"><code class="language-bash">prefix d</code></pre><p>show all session and select one</p><pre class=" language-bash"><code class="language-bash">prefix s</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pane move&lt;/p&gt;
&lt;pre class=&quot; language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;prefix n
prefix p
prefix l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;kill pane, window&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>奇技淫巧</title>
    <link href="http://yoursite.com/2021/03/12/%E4%B8%8D%E5%8A%A0%E6%95%B4%E7%90%86%E7%9A%84%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    <id>http://yoursite.com/2021/03/12/%E4%B8%8D%E5%8A%A0%E6%95%B4%E7%90%86%E7%9A%84%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</id>
    <published>2021-03-12T13:21:07.443Z</published>
    <updated>2021-03-12T13:21:07.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="awk后单引号括起来的命令本质上是防止被shell转义的awk语句"><a href="#awk后单引号括起来的命令本质上是防止被shell转义的awk语句" class="headerlink" title="awk后单引号括起来的命令本质上是防止被shell转义的awk语句"></a>awk后单引号括起来的命令本质上是防止被shell转义的awk语句</h2><pre><code>aa=&quot;aaa&quot;awk &#39;xxxxxx; print &quot;&#39; $aa &#39;&quot;xxxxxx&#39; #错误awk &#39;xxxxxx; print &quot;&#39;$aa&#39;&quot;xxxxxx&#39; #中间单引号与变量之间的空格会被shell当分隔符处理awk &#39;xxxxxx; print &quot;    &#39;$aa&#39;  &quot;xxxxxx&#39; #在两边加空格aa=&quot;aaa bbb&quot;awk &#39;xxxxxx; print &quot;&#39;” $aa “&#39;&quot;xxxxxx&#39; #变量内有空格</code></pre><h2 id="显示文件的一部分内容"><a href="#显示文件的一部分内容" class="headerlink" title="显示文件的一部分内容"></a>显示文件的一部分内容</h2><pre><code>sed -n &#39;x,yp&#39; filename #输出指定文件x行到y行的内容</code></pre><h2 id="ubuntu-查看ipynb文件"><a href="#ubuntu-查看ipynb文件" class="headerlink" title="ubuntu 查看ipynb文件"></a>ubuntu 查看ipynb文件</h2><pre><code>jupyter notebook</code></pre><p>启动服务后浏览器查看</p><h2 id="0"><a href="#0" class="headerlink" title="$0"></a>$0</h2><p>在只检索PATH的命令里调用自身</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;awk后单引号括起来的命令本质上是防止被shell转义的awk语句&quot;&gt;&lt;a href=&quot;#awk后单引号括起来的命令本质上是防止被shell转义的awk语句&quot; class=&quot;headerlink&quot; title=&quot;awk后单引号括起来的命令本质上是防止被shell转</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>cluster</title>
    <link href="http://yoursite.com/2021/03/12/cluster/"/>
    <id>http://yoursite.com/2021/03/12/cluster/</id>
    <published>2021-03-12T13:21:07.439Z</published>
    <updated>2021-03-12T13:21:07.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ARES-计算团簇-h-BN-或其他"><a href="#ARES-计算团簇-h-BN-或其他" class="headerlink" title="ARES 计算团簇 h-BN 或其他"></a>ARES 计算团簇 h-BN 或其他</h1><h2 id="金原子的STO轨道屏蔽系数"><a href="#金原子的STO轨道屏蔽系数" class="headerlink" title="金原子的STO轨道屏蔽系数"></a>金原子的STO轨道屏蔽系数</h2><p>zeta=(z-sigma)/n^*<br>zeta: 轨道指数 z: 核电荷 sigma: 屏蔽常数 n^*: 有效主量子数</p><h2 id="Slater-规则"><a href="#Slater-规则" class="headerlink" title="Slater 规则"></a>Slater 规则</h2><ol><li> 将核外电子按主量子数n和角量子数l分组 1s,2s2p,3s3p,3d,4s4p,4d,4f,5s5p,5d,5f,6s6p,6d,6f,7s7p,7d,7f</li><li>外层各组电子对内层各组电子不产生屏蔽，sigma=0</li><li>1s同组电子间屏蔽常数sigma为0.30，其余同组电子屏蔽常数为0.35</li><li>相邻两组之间，对nsnp电子，主量子数为(n-1)的各组每个电子对外组每个电子的屏蔽常数sigma为0.85，更内组屏蔽常数为1。对于外组df电子，不论是相邻内组还是更内组的每个电子，对它的屏蔽常数都是sigma=1</li><li>有效主量子数n<em>与主量子数n的对应关系为<br>n      1 , 2 , 3 , 4 , 5 , 6<br>n^</em>   1 , 2 , 3 , 3.7 , 4.0 , 4.2</li></ol><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>Au 79  5d10|6s1<br>1s2|2s2|2p6|3s2|3p6|3d10|4s2|4p6|4d10|4f14|5s2|5p6|5d10|6s1<br>2 8 18 32 18 1<br>5d10 : 79-(9*0.35)-(2+8+18+32)*1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ARES-计算团簇-h-BN-或其他&quot;&gt;&lt;a href=&quot;#ARES-计算团簇-h-BN-或其他&quot; class=&quot;headerlink&quot; title=&quot;ARES 计算团簇 h-BN 或其他&quot;&gt;&lt;/a&gt;ARES 计算团簇 h-BN 或其他&lt;/h1&gt;&lt;h2 id=&quot;金</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>crontab的使用心得</title>
    <link href="http://yoursite.com/2021/03/12/crontab%E7%9A%84%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>http://yoursite.com/2021/03/12/crontab%E7%9A%84%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</id>
    <published>2021-03-12T13:21:07.439Z</published>
    <updated>2021-03-12T13:21:07.439Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容均基于Ubuntu20.04</p><h2 id="任务设置"><a href="#任务设置" class="headerlink" title="任务设置"></a><strong>任务设置</strong></h2><p>使用<code>crontab -e</code>进行任务设置</p><pre class=" language-bash"><code class="language-bash">* * * * * <span class="token function">command</span> <span class="token comment" spellcheck="true">#五个*分别代表minute(m), hours(h), day of mouth(dom), mouth(mon), day of week(dow)</span></code></pre><p>使用*表示不对该项时间进行设置。</p><h2 id="任务输出及运行状况查询"><a href="#任务输出及运行状况查询" class="headerlink" title="任务输出及运行状况查询"></a><strong>任务输出及运行状况查询</strong></h2><p>监控定时任务一般采用以下两种方式</p><ul><li>任务输出重定向<br>```bash</li></ul><ul><li><ul><li><ul><li><ul><li><ul><li>command &gt;&gt; /path_of_log/log 2&amp;&gt;1<br>```</li></ul></li></ul></li></ul></li></ul></li></ul><ul><li>查看<code>/var/mail/</code>文件夹，如果定时任务有输出，那么系统会自动往<code>/var/mail/$user</code>追加写入一封邮件</li></ul><h2 id="不在任务列表的定时任务"><a href="#不在任务列表的定时任务" class="headerlink" title="不在任务列表的定时任务"></a><strong>不在任务列表的定时任务</strong></h2><p>在<code>/var/mail/</code>文件夹中有<code>root</code>和<code>$user</code>这两个文件，发现每隔半小时会有一次wps更新失败的邮件提醒，而<code>root</code>账户下没有定时任务，但<code>/var/log/syslog</code>和<code>/var/mail/root</code>两个文件里均显示有这一定时任务，在<a href="https://serverfault.com/questions/103482/where-is-this-cron-job-running-from">where is this cron job running from</a>的回答里发现<code>/etc/cron*/</code>目录下也有定时任务的设置，在<code>/etc/cron.d/</code>里面找到了<code>wpsupdate</code>文件，删掉，总算不用半小时一封新邮件了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以下内容均基于Ubuntu20.04&lt;/p&gt;
&lt;h2 id=&quot;任务设置&quot;&gt;&lt;a href=&quot;#任务设置&quot; class=&quot;headerlink&quot; title=&quot;任务设置&quot;&gt;&lt;/a&gt;&lt;strong&gt;任务设置&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;crontab -e&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/10/12/MPI_command/MPI_four_fundanmental/"/>
    <id>http://yoursite.com/2020/10/12/MPI_command/MPI_four_fundanmental/</id>
    <published>2020-10-12T08:41:03.366Z</published>
    <updated>2020-10-12T08:41:03.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MPI-INIT"><a href="#MPI-INIT" class="headerlink" title="MPI_INIT()"></a>MPI_INIT()</h1><h1 id="MPI-FINALIZE"><a href="#MPI-FINALIZE" class="headerlink" title="MPI_FINALIZE()"></a>MPI_FINALIZE()</h1><h1 id="MPI-COMM-RANK"><a href="#MPI-COMM-RANK" class="headerlink" title="MPI_COMM_RANK()"></a>MPI_COMM_RANK()</h1><h1 id="MPI-COMM-SIZE"><a href="#MPI-COMM-SIZE" class="headerlink" title="MPI_COMM_SIZE()"></a>MPI_COMM_SIZE()</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MPI-INIT&quot;&gt;&lt;a href=&quot;#MPI-INIT&quot; class=&quot;headerlink&quot; title=&quot;MPI_INIT()&quot;&gt;&lt;/a&gt;MPI_INIT()&lt;/h1&gt;&lt;h1 id=&quot;MPI-FINALIZE&quot;&gt;&lt;a href=&quot;#MPI-FINALIZE&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/10/12/MPI_command/MPI_command/"/>
    <id>http://yoursite.com/2020/10/12/MPI_command/MPI_command/</id>
    <published>2020-10-12T08:38:26.960Z</published>
    <updated>2020-10-12T08:38:28.180Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MPI-command"><a href="#MPI-command" class="headerlink" title="MPI_command"></a>MPI_command</h1><p>[TOC] dwdwdwd</p><p><a href="./">dwdw</a></p><p><span id='sss'>./SUMMARY.md</span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MPI-command&quot;&gt;&lt;a href=&quot;#MPI-command&quot; class=&quot;headerlink&quot; title=&quot;MPI_command&quot;&gt;&lt;/a&gt;MPI_command&lt;/h1&gt;&lt;p&gt;[TOC] dwdwdwd&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;./&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
